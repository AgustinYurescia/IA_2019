#---------------HECHOS---------------#
jardin(CodigoJ, datoqnoserv, [Tipos de Sala]
salas(CodigoJ, datosqenoserv, tipo_de_sala, [Dni Asistentes])

#-----------------------------------------#

:-dynamic jardin/3.
:-dynamic salas/4.

abrir:-
      consult('C:/Users/Agustin Yurescia/Desktop/16-11-2017.txt').

#---------------EJERCICIO 1---------------#
Dada una Lista [] de Dni, y un Codigo de Jardin Devolver una Lista [] con aquellos Dni que asisten realmente al Jardin.
menu:-
      abrir,
      nl,
      writeln('Ingrese una lista de DNIs: '),
      leer(L1),
      write('Ingrese el código del jardín: '),
      read(CJ),
      buscar(CJ,L1,L3),
      nl,
      write('Los DNIs que coinciden son: '),
      writeln(L3).

leer([H|T]):-
      read(H),
      H \= [],
      leer(T).
leer([]).

existe(H,[H|_]).
existe(H,[_|T]):-
          existe(H,T).

buscar(C,L1,L3):-
      salas(C,_,_,L2),
      retract(salas(C,_,_,L2)),
      interseccion(L1,L2,L3).

interseccion([],_,[]).
interseccion([H1|T1],L2,[H1|T3]):-
     existe(H1,L2),
     interseccion(T1, L2, T3).
interseccion([_|T1],L2,T3):-
          interseccion(T1,L2,T3).

#---------------EJERCICIO 2---------------#
Dada una Lista [] de Jardines, y una Lista [] de Tipos de Sala, devolver una Lista [] con los Jardines que tengan todos los 
tipos de sala.



